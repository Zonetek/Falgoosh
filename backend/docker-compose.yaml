services:
  web:
    build:
      context: .
      dockerfile: ./docker/web.Dockerfile
    container_name: web-api
    volumes:
      - .:/app
    working_dir: /app
    ports:
      - "8000:8000"
    env_file:
      - .env
    environment:
      - DJANGO_SETTINGS_MODULE=config.settings.dev
    depends_on:
      - db
      - broker
      - mongodb
    restart: always
    networks:
      - mynetwork

  broker:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    restart: always
    networks:
      - mynetwork

  db:
    container_name: postgres
    image: postgres:17
    restart: always
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_HOST: ${POSTGRES_HOST}
    networks:
      - mynetwork

  mongodb:
    image: mongo:latest
    container_name: mongodb_container
    ports:
      - "27017:27017"
    volumes:
      - ./mongo_data:/data/db
    restart: always
    env_file:
      - .env
    networks:
      - mynetwork

  scanner:
    build:
      context: .
      dockerfile: ./docker/discovery.Dockerfile
    container_name: scanner
    command: python -m discovery.scanner
    restart: on-failure
    networks:
      - mynetwork
    env_file:
      - .env
    cap_add:
      - NET_RAW
      - NET_ADMIN
    depends_on:
      - mongodb
    working_dir: /app/api_applications

  banner_grabbing:
    build:
      context: .
      dockerfile: ./docker/banner_grabbing.Dockerfile
    container_name: banner_grabbing
    command: python -m banner_grabbing.main
    restart: on-failure
    networks:
      - mynetwork
    env_file:
      - .env
    cap_add:
      - NET_RAW
      - NET_ADMIN
    depends_on:
      - mongodb
    working_dir: /app/api_applications
    # dns:
    #   - 8.8.8.8
    #   - 1.1.1.1


  enrichments:
    build:
      context: .
      dockerfile: ./docker/enrichments.Dockerfile
    container_name: enrichments
    command: python -m enrichment.main
    restart: on-failure
    networks:
      - mynetwork
    env_file:
      - .env
    cap_add:
      - NET_RAW
      - NET_ADMIN
    depends_on:
      - mongodb
    working_dir: /app/api_applications
    dns:
      - 8.8.8.8
      - 1.1.1.1

networks:
  mynetwork:
    driver: bridge

volumes:
  postgres_data:

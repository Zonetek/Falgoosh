import requests
import logging
import os

def ensure_blacklist_file_exists():
    script_dir = os.path.dirname(os.path.abspath(__file__))
    data_dir = os.path.join(script_dir, "threat_ips")
    file_path = os.path.join(data_dir, "blacklist_ips.txt")

    os.makedirs(data_dir, exist_ok=True)

    if not os.path.exists(file_path):
        print("[INFO] Blacklist file not found. Downloading...")
        fetch_and_save()
        print("[INFO] Download completed.")

    return file_path


def fetch_and_save():
    script_dir = os.path.dirname(os.path.abspath(__file__))
    threat_dir = os.path.join(script_dir, "threat_ips")
    output_file = os.path.join(threat_dir, "blacklist_ips.txt")

    os.makedirs(threat_dir, exist_ok=True)

    urls = [
        "https://cinsscore.com/list/ci-badguys.txt",
        "https://www.blocklist.de/downloads/export-ips_all.txt"
    ]

    all_ips = set()
    for url in urls:
        try:
            resp = requests.get(url, timeout=15)
            resp.raise_for_status()
            for line in resp.text.splitlines():
                ip = line.strip()
                if ip and not ip.startswith("#"):
                    all_ips.add(ip)
        except Exception as e:
            logging.error(f"Failed to download from {url} - {e}")

    with open(output_file, "w") as f:
        for ip in sorted(all_ips):
            f.write(ip + "\n")

    logging.info(f"All IPs saved to {output_file}")


def is_ip_blacklisted(ip_address):
    output_file = ensure_blacklist_file_exists()

    if not os.path.exists(output_file):
        raise FileNotFoundError(f"Blacklist file not found: {output_file}")

    with open(output_file, "r") as f:
        ips = set(line.strip() for line in f if line.strip())

    return ip_address in ips
